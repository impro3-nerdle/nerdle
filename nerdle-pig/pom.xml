<!-- 
  Copyright 2014
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
  
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>edu.tuberlin.dima</groupId>
		<artifactId>nerdle</artifactId>
		<version>0.0.1</version>
	</parent>
	<artifactId>nerdle-pig</artifactId>
	<name>nerdle-pig</name>

	<!-- maybe a solution -->
	<!-- http://stackoverflow.com/questions/21487476/maven-build-throws-jodatime-exception-at-runtime -->

	<repositories>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.outputEncoding>UTF-8</project.build.outputEncoding>

		<cdh.version>cdh4.5.0</cdh.version>

		<hadoop.version>2.0.0-${cdh.version}</hadoop.version>
		<hadoop.client.version>2.0.0-mr1-${cdh.version}</hadoop.client.version>
		<hbase.version>0.94.6-${cdh.version}</hbase.version>
		<pig.version>0.11.0-${cdh.version}</pig.version>
		<guava.version>14.0.1</guava.version>
		<hadoop.local>provided</hadoop.local>
		<jetty.version>9.1.1.v20140108</jetty.version>

		<jackson.version>1.9.13</jackson.version>
		<junit.version>4.11</junit.version>
		<lucene.version>4.6.1</lucene.version>
		<ehcache.version>2.6.5</ehcache.version>
		<elephantbird.version>4.4</elephantbird.version>

		<mahout.version>0.9</mahout.version>

		<dkpro.version>1.5.0</dkpro.version>

		<jsoup.version>1.7.3</jsoup.version>

		<gson.version>2.2.4</gson.version>

		<spring.version>4.0.1.RELEASE</spring.version>

		<parquet.version>1.3.2</parquet.version>

		<metrics.version>3.0.1</metrics.version>

		<slf4j.version>1.7.5</slf4j.version>
	</properties>

	<dependencies>

		<!-- for corenlp -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>

		<!-- Apache Pig -->


		<!-- PIG -->
		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pig</artifactId>
			<version>${pig.version}</version>
			<scope>${hadoop.local}</scope>
			<exclusions>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
			</exclusions>
		</dependency>



		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pigunit</artifactId>
			<version>${pig.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Hadoop -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.client.version}</version>
			<scope>${hadoop.local}</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>${hadoop.client.version}</version>
			<scope>${hadoop.local}</scope>
		</dependency>

		<!-- This is here as pig has not bundled this parser -->
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>3.5.1</version>
			<scope>test</scope>
		</dependency>

		<!-- jackson needed for pig, but bundling problems -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Because of the following error: Missing artifact jdk.tools:jdk.tools:jar:1.6 -->
		<!-- mvn install:install-file -DgroupId=jdk.tools -DartifactId=jdk.tools 
			-Dpackaging=jar -Dversion=1.6 -Dfile=tools.jar -DgeneratePom=true -->
		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>1.6</version>
		</dependency>

		<!-- End Apache Pig -->

		<dependency>
			<groupId>edu.tuberlin.dima</groupId>
			<artifactId>nerdle-oie</artifactId>
			<version>0.0.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<outputFile>
								${project.build.directory}/${project.artifactId}-${project.version}-job.jar
							</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- <profiles> -->
	<!-- <profile> -->
	<!-- <id>default-tools.jar</id> -->
	<!-- <activation> -->
	<!-- <property> -->
	<!-- <name>java.vendor</name> -->
	<!-- <value>Sun Microsystems Inc.</value> -->
	<!-- </property> -->
	<!-- </activation> -->
	<!-- <dependencies> -->
	<!-- <dependency> -->
	<!-- <groupId>com.sun</groupId> -->
	<!-- <artifactId>tools</artifactId> -->
	<!-- <version>1.4.2</version> -->
	<!-- <scope>system</scope> -->
	<!-- <systemPath>${java.home}/../lib/tools.jar</systemPath> -->
	<!-- </dependency> -->
	<!-- </dependencies> -->
	<!-- </profile> -->
	<!-- </profiles> -->

</project>